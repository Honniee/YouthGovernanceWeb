/**
 * PDF Format Templates for Staff Export
 * Choose from different professional layouts
 */

/**
 * Format 1: Official Government Document Style
 */
export const generateOfficialFormat = (doc, staff, exportInfo) => {
  // Header with logo placeholder and official styling
  doc.fontSize(18).fillColor('#000').text('LYDO - YOUTH GOVERNANCE', { align: 'center' });
  doc.fontSize(14).text('Staff Management Report', { align: 'center' });
  doc.moveDown(0.3);
  
  // Divider line
  doc.moveTo(50, doc.y).lineTo(550, doc.y).strokeColor('#333').lineWidth(2).stroke();
  doc.moveDown(0.5);
  
  // Report information box
  const infoY = doc.y;
  doc.rect(50, infoY, 500, 60).strokeColor('#ddd').stroke();
  doc.fontSize(10).fillColor('#555');
  doc.text(`Report Generated: ${new Date().toLocaleDateString('en-US', { 
    weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' 
  })}`, 60, infoY + 10);
  doc.text(`Total Staff Members: ${staff.length}`, 60, infoY + 25);
  doc.text(`Export Type: ${exportInfo.type || 'All Staff'}`, 60, infoY + 40);
  doc.text(`Generated by: LYDO System`, 350, infoY + 10);
  doc.text(`Status Filter: ${exportInfo.status || 'All'}`, 350, infoY + 25);
  
  doc.y = infoY + 80;
  
  // Professional table header
  const tableTop = doc.y;
  doc.rect(50, tableTop, 500, 25).fillAndStroke('#4a5568', '#4a5568');
  
  doc.fillColor('#fff').fontSize(11).font('Helvetica-Bold');
  doc.text('ID', 60, tableTop + 8, { width: 60 });
  doc.text('Full Name', 130, tableTop + 8, { width: 140 });
  doc.text('Email Address', 280, tableTop + 8, { width: 140 });
  doc.text('Status', 430, tableTop + 8, { width: 60 });
  doc.text('Date Joined', 500, tableTop + 8, { width: 80 });
  
  doc.y = tableTop + 30;
  
  // Table rows with alternating colors
  staff.forEach((s, index) => {
    const rowY = doc.y;
    const rowHeight = 20;
    
    // Alternating row colors
    if (index % 2 === 0) {
      doc.rect(50, rowY, 500, rowHeight).fillAndStroke('#f7fafc', '#e2e8f0');
    } else {
      doc.rect(50, rowY, 500, rowHeight).fillAndStroke('#fff', '#e2e8f0');
    }
    
    const name = `${s.firstName || ''} ${s.middleName ? s.middleName.charAt(0) + '.' : ''} ${s.lastName || ''}`.trim();
    const status = s.isActive && !s.deactivated ? 'Active' : 'Inactive';
    const joined = s.createdAt ? new Date(s.createdAt).toLocaleDateString() : 'N/A';
    
    doc.fillColor('#000').fontSize(9).font('Helvetica');
    doc.text(s.lydoId || '', 60, rowY + 6, { width: 60 });
    doc.text(name, 130, rowY + 6, { width: 140 });
    doc.text(s.email || '', 280, rowY + 6, { width: 140 });
    
    // Status with color coding
    if (status === 'Active') {
      doc.fillColor('#38a169');
    } else {
      doc.fillColor('#e53e3e');
    }
    doc.text(status, 430, rowY + 6, { width: 60 });
    
    doc.fillColor('#000');
    doc.text(joined, 500, rowY + 6, { width: 80 });
    
    doc.y = rowY + rowHeight;
    
    // Page break if needed
    if (doc.y > 720) {
      doc.addPage();
      doc.y = 50;
    }
  });
  
  // Footer
  doc.fontSize(8).fillColor('#666');
  doc.text('LYDO Youth Governance System - Confidential Document', { align: 'center' });
  doc.text(`Page 1 of 1 | Generated on ${new Date().toISOString()}`, { align: 'center' });
};

/**
 * Format 2: Modern Minimalist Style
 */
export const generateModernFormat = (doc, staff, exportInfo) => {
  // Clean header
  doc.fontSize(24).fillColor('#2d3748').text('Staff Directory', { align: 'left' });
  doc.fontSize(12).fillColor('#718096').text('LYDO Youth Governance', { align: 'left' });
  doc.moveDown(1);
  
  // Summary cards
  const cardY = doc.y;
  const cardWidth = 120;
  const cardHeight = 50;
  
  // Total Staff Card
  doc.rect(50, cardY, cardWidth, cardHeight).fillAndStroke('#edf2f7', '#e2e8f0');
  doc.fillColor('#2d3748').fontSize(20).text(staff.length.toString(), 60, cardY + 10, { width: cardWidth - 20, align: 'center' });
  doc.fontSize(10).text('Total Staff', 60, cardY + 30, { width: cardWidth - 20, align: 'center' });
  
  // Active Staff Card
  const activeCount = staff.filter(s => s.isActive && !s.deactivated).length;
  doc.rect(180, cardY, cardWidth, cardHeight).fillAndStroke('#f0fff4', '#68d391');
  doc.fillColor('#38a169').fontSize(20).text(activeCount.toString(), 190, cardY + 10, { width: cardWidth - 20, align: 'center' });
  doc.fontSize(10).text('Active', 190, cardY + 30, { width: cardWidth - 20, align: 'center' });
  
  // Inactive Staff Card
  const inactiveCount = staff.length - activeCount;
  doc.rect(310, cardY, cardWidth, cardHeight).fillAndStroke('#fef5e7', '#f6ad55');
  doc.fillColor('#d69e2e').fontSize(20).text(inactiveCount.toString(), 320, cardY + 10, { width: cardWidth - 20, align: 'center' });
  doc.fontSize(10).text('Inactive', 320, cardY + 30, { width: cardWidth - 20, align: 'center' });
  
  doc.y = cardY + cardHeight + 30;
  
  // Clean table
  staff.forEach((s, index) => {
    if (index % 15 === 0 && index > 0) {
      doc.addPage();
      doc.y = 50;
    }
    
    const name = `${s.firstName || ''} ${s.lastName || ''}`.trim();
    const status = s.isActive && !s.deactivated ? 'Active' : 'Inactive';
    
    // Staff card style
    const cardY = doc.y;
    const cardHeight = 35;
    
    doc.rect(50, cardY, 500, cardHeight).fillAndStroke('#f8f9fa', '#e9ecef');
    
    // Status indicator
    const statusColor = status === 'Active' ? '#28a745' : '#dc3545';
    doc.rect(50, cardY, 5, cardHeight).fillAndStroke(statusColor, statusColor);
    
    doc.fillColor('#212529').fontSize(12).font('Helvetica-Bold');
    doc.text(name, 70, cardY + 8, { width: 200 });
    
    doc.fillColor('#6c757d').fontSize(10).font('Helvetica');
    doc.text(s.lydoId || '', 70, cardY + 22, { width: 100 });
    doc.text(s.email || '', 280, cardY + 8, { width: 200 });
    doc.text(status, 280, cardY + 22, { width: 100 });
    
    doc.y = cardY + cardHeight + 5;
  });
};

/**
 * Format 3: Detailed Profile Style
 */
export const generateDetailedFormat = (doc, staff, exportInfo) => {
  // Professional header
  doc.fontSize(20).fillColor('#1a365d').text('LYDO STAFF PROFILES', { align: 'center' });
  doc.fontSize(12).fillColor('#2d3748').text('Comprehensive Staff Directory', { align: 'center' });
  doc.moveDown(1);
  
  // Date and summary
  doc.fontSize(10).fillColor('#718096');
  doc.text(`Generated: ${new Date().toLocaleDateString('en-US', { 
    year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit'
  })}`, { align: 'center' });
  doc.moveDown(1);
  
  // Detailed cards for each staff member
  staff.forEach((s, index) => {
    if (doc.y > 650) {
      doc.addPage();
      doc.y = 50;
    }
    
    const cardY = doc.y;
    const cardHeight = 80;
    
    // Card background
    doc.rect(50, cardY, 500, cardHeight).fillAndStroke('#f8f9fa', '#dee2e6');
    
    // Header section
    doc.rect(50, cardY, 500, 25).fillAndStroke('#343a40', '#343a40');
    
    const name = `${s.firstName || ''} ${s.middleName || ''} ${s.lastName || ''}`.trim();
    doc.fillColor('#fff').fontSize(12).font('Helvetica-Bold');
    doc.text(name, 60, cardY + 8, { width: 300 });
    doc.text(s.lydoId || '', 450, cardY + 8, { width: 90 });
    
    // Details section
    doc.fillColor('#212529').fontSize(10).font('Helvetica');
    doc.text(`Email: ${s.email || 'N/A'}`, 60, cardY + 35, { width: 240 });
    doc.text(`Personal: ${s.personalEmail || 'N/A'}`, 60, cardY + 50, { width: 240 });
    doc.text(`Joined: ${s.createdAt ? new Date(s.createdAt).toLocaleDateString() : 'N/A'}`, 320, cardY + 35, { width: 120 });
    
    // Status badge
    const status = s.isActive && !s.deactivated ? 'ACTIVE' : 'INACTIVE';
    const statusColor = status === 'ACTIVE' ? '#28a745' : '#dc3545';
    const statusBg = status === 'ACTIVE' ? '#d4edda' : '#f8d7da';
    
    doc.rect(320, cardY + 50, 60, 15).fillAndStroke(statusBg, statusColor);
    doc.fillColor(statusColor).fontSize(8).font('Helvetica-Bold');
    doc.text(status, 325, cardY + 54, { width: 50, align: 'center' });
    
    doc.y = cardY + cardHeight + 10;
  });
};

/**
 * Format 4: Table Grid Style (Excel-like)
 */
export const generateTableFormat = (doc, staff, exportInfo) => {
  // Title
  doc.fontSize(16).fillColor('#000').text('LYDO Staff Export - Table Format', { align: 'center' });
  doc.moveDown(0.5);
  doc.fontSize(10).fillColor('#666').text(`Export Date: ${new Date().toLocaleString()} | Total Records: ${staff.length}`, { align: 'center' });
  doc.moveDown(1);
  
  // Table setup
  const tableStartY = doc.y;
  const rowHeight = 18;
  const columns = [
    { title: 'LYDO ID', x: 50, width: 70 },
    { title: 'Last Name', x: 120, width: 80 },
    { title: 'First Name', x: 200, width: 80 },
    { title: 'Middle', x: 280, width: 50 },
    { title: 'Email', x: 330, width: 120 },
    { title: 'Status', x: 450, width: 50 },
    { title: 'Created', x: 500, width: 70 }
  ];
  
  // Draw headers
  doc.rect(50, tableStartY, 520, rowHeight).fillAndStroke('#f1f3f4', '#000');
  doc.fillColor('#000').fontSize(9).font('Helvetica-Bold');
  
  columns.forEach(col => {
    doc.text(col.title, col.x + 5, tableStartY + 5, { width: col.width - 10, align: 'center' });
  });
  
  let currentY = tableStartY + rowHeight;
  
  // Draw data rows
  staff.forEach((s, index) => {
    if (currentY > 720) {
      doc.addPage();
      currentY = 50;
    }
    
    // Alternating row colors
    const bgColor = index % 2 === 0 ? '#ffffff' : '#f8f9fa';
    doc.rect(50, currentY, 520, rowHeight).fillAndStroke(bgColor, '#ddd');
    
    doc.fillColor('#000').fontSize(8).font('Helvetica');
    
    const rowData = [
      s.lydoId || '',
      s.lastName || '',
      s.firstName || '',
      s.middleName || '',
      s.email || '',
      s.isActive && !s.deactivated ? 'Active' : 'Inactive',
      s.createdAt ? new Date(s.createdAt).toLocaleDateString() : ''
    ];
    
    columns.forEach((col, colIndex) => {
      doc.text(rowData[colIndex], col.x + 3, currentY + 5, { width: col.width - 6 });
    });
    
    currentY += rowHeight;
  });
};




























